{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAOC,SAASC,cAAc,QAEpC,SAASC,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACLN,EACFI,EAAQ,C,SAAEN,E,MAAUC,IAEpBM,EAAO,C,SAAEP,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CAwBbL,EAAKa,iBAAiB,UAlBtB,SAAqBC,GACnBA,EAAIC,iBACJ,IAAIC,GAAiBhB,EAAKK,MAAMY,MAEhC,IAAK,IAAIC,EAAI,EAAGA,GAAKlB,EAAKmB,OAAOF,MAAOC,IACtCE,QAAQC,IAAIL,GACZb,EAAce,EAAGF,GACdM,MAAK,EAAClB,SAAEA,EAAQC,MAAEA,MACjBP,EAAAyB,OAAOC,QAAQ,uBAAqBpB,QAAiBC,MAAU,IAEhEoB,OAAM,EAACrB,SAAEA,EAAQC,MAAEA,MAClBP,EAAAyB,OAAOG,QAAQ,sBAAoBtB,QAAeC,MAAU,IAGhEW,IAAkBhB,EAAK2B,KAAKV,K","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst form = document.querySelector('form');\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\n// console.log(populateDelay);\n\nfunction onSubmitBtn(evt) {\n  evt.preventDefault();\n  let populateDelay = +form.delay.value;\n\n  for (let i = 1; i <= form.amount.value; i++) {\n    console.log(populateDelay);\n    createPromise(i, populateDelay)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n\n    populateDelay += +form.step.value;\n  }\n}\n\nform.addEventListener('submit', onSubmitBtn);\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","addEventListener","evt","preventDefault","populateDelay","value","i","amount","console","log","then","Notify","success","catch","failure","step"],"version":3,"file":"03-promises.b454258a.js.map"}